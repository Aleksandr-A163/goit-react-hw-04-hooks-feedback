{"version":3,"sources":["Statistics/Statistics.module.css","Feedback/FeedbackOptions.module.css","Notification/Notification.module.css","Section/Section.module.css","Feedback/FeedbackOptions.jsx","Statistics/Statistics.jsx","Notification/Notification.jsx","Section/Section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","style","message","message__title","message__section","map","btn","message_buttons","value","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","styles","statisticsContainer","statistic","Notification","notification","Section","children","cs","Container","App","state","e","currentBtnValue","currentTarget","setState","prevState","countTotalFeedback","Object","values","reduce","acc","val","countZero","countPositiveFeedbackPercentage","Math","trunc","btnNames","keys","this","title","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,UAAY,gC,gBCA5FD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,eAAiB,wCAAwC,iBAAmB,0CAA0C,gBAAkB,2C,qBCArMD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,QAAU,2B,6JC6BbC,EA1BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACE,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,oBAAIF,UAAWC,IAAME,eAArB,mCACA,qBAAKH,UAAWC,IAAMG,iBAAtB,SACGN,EAAQO,KAAI,SAAAC,GAAG,OACd,wBACEN,UAAWC,IAAMM,gBACjBC,MAAOF,EAEPG,KAAK,SACLC,QAASX,EALX,SAOGO,GAJIA,c,gBCeFK,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIhB,UAAWiB,IAAOC,oBAAtB,UACE,qBAAIlB,UAAWiB,IAAOE,UAAtB,mBAAwCP,KACxC,qBAAIZ,UAAWiB,IAAOE,UAAtB,sBAA2CN,KAC3C,qBAAIb,UAAWiB,IAAOE,UAAtB,kBAAuCL,KACvC,qBAAId,UAAWiB,IAAOE,UAAtB,oBAAyCJ,KACzC,qBAAIf,UAAWiB,IAAOE,UAAtB,gCACsBH,EADtB,W,gBCCSI,EARM,SAAC,GAAD,IAAGlB,EAAH,EAAGA,QAAH,OACnB,qBAAKF,UAAWiB,IAAOI,aAAvB,SAAsCnB,K,iBCKzBoB,EARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,qBAAKvB,UAAWwB,IAAGC,UAAnB,SAA+BF,KCC3BG,E,4MACJC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,gBAAkB,SAAA6B,GAChB,IAAMC,EAAkBD,EAAEE,cAActB,MACxC,EAAKuB,UAAS,SAAAC,GAAS,sBACpBH,EAAkBG,EAAUH,GAAmB,O,EAIpDI,mBAAqB,WAEnB,OADkBC,OAAOC,OAAO,EAAKR,OACpBS,QAAO,SAACC,EAAKC,GAE5B,OADAD,GAAOC,M,EAIXC,UAAY,WACV,OACsB,IAApB,EAAKZ,MAAMf,MACY,IAAvB,EAAKe,MAAMd,SACQ,IAAnB,EAAKc,MAAMb,K,EAOf0B,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKf,MAAMf,KAAO,EAAKqB,qBAAwB,M,4CAGpE,WACE,IAAMU,EAAWT,OAAOU,KAAKC,KAAKlB,OAClC,OACE,gCACE,cAAC,EAAD,CAASmB,MAAM,6BAAf,SACE,cAAC,EAAD,CACEhD,QAAS6C,EACT5C,gBAAiB8C,KAAK9C,oBAG1B,cAAC,EAAD,CAAS+C,MAAM,aAAf,SACGD,KAAKN,YACJ,cAAC,EAAD,CAAcrC,QAAQ,sBAEtB,cAAC,EAAD,CACEU,KAAMiC,KAAKlB,MAAMf,KACjBC,QAASgC,KAAKlB,MAAMd,QACpBC,IAAK+B,KAAKlB,MAAMb,IAChBC,MAAO8B,KAAKZ,qBACZjB,mBAAoB6B,KAAKL,6C,GAvDrBO,aAgEHrB,I,MCjEfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d7a276b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsContainer\":\"Statistics_statisticsContainer__3M5xe\",\"statistic\":\"Statistics_statistic__2bmU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"FeedbackOptions_message__zRN6g\",\"message__title\":\"FeedbackOptions_message__title__289Q1\",\"message__section\":\"FeedbackOptions_message__section__oha6p\",\"message_buttons\":\"FeedbackOptions_message_buttons__1gxXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1_Wa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__aec4v\"};","import style from './FeedbackOptions.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    <div className={style.message}>\n      <h1 className={style.message__title}>Please leave feedback</h1>\n      <div className={style.message__section}>\n        {options.map(btn => (\n          <button\n            className={style.message_buttons}\n            value={btn}\n            key={btn}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n          >\n            {btn}\n          </button>\n        ))}\n      </div>\n    </div>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\n\nimport { PropTypes } from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={styles.statisticsContainer}>\n      <li className={styles.statistic}>Good: {good}</li>\n      <li className={styles.statistic}>Neutral: {neutral}</li>\n      <li className={styles.statistic}>Bad: {bad}</li>\n      <li className={styles.statistic}>Total: {total}</li>\n      <li className={styles.statistic}>\n        Positive feedback: {positivePercentage}%\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\r\n\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <div className={styles.notification}>{message}</div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cs from './Section.module.css';\n\nconst Section = ({ children }) => (\n  <div className={cs.Container}>{children}</div>\n);\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\nimport Section from './Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const currentBtnValue = e.currentTarget.value;\n    this.setState(prevState => ({\n      [currentBtnValue]: prevState[currentBtnValue] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const valuesArr = Object.values(this.state);\n    return valuesArr.reduce((acc, val) => {\n      acc += val;\n      return acc;\n    });\n  };\n  countZero = () => {\n    if (\n      this.state.good === 0 &&\n      this.state.neutral === 0 &&\n      this.state.bad === 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.trunc((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const btnNames = Object.keys(this.state);\n    return (\n      <div>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={btnNames}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countZero() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}